import { EventEmitter, Component, Input, Output, ViewChild, NgModule } from '@angular/core';
import { ControlContainer, NgForm, FormsModule } from '@angular/forms';
import * as intlTelInput from 'intl-tel-input';
import { CommonModule } from '@angular/common';

/*
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
 * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
 * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
 * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
 * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 */
class IntlTelInputComponent {
    constructor() {
        this.name = 'intl-tel-input-name';
        this.options = {};
        this.E164PhoneNumberChange = new EventEmitter();
    }
    static modifyCountryData() {
        window.intlTelInputGlobals.getCountryData().forEach((country) => country.name = country.name.replace(/.+\((.+)\)/, '$1'));
    }
    ngAfterViewInit() {
        if (this.onlyLocalized) {
            IntlTelInputComponent.modifyCountryData();
        }
        const intlTelInputInstance = intlTelInput;
        this._intlTelInput = intlTelInputInstance(this._inputElement.nativeElement, this.options);
    }
    get intlTelInput() {
        return this._intlTelInput;
    }
    get phoneNumber() {
        return this._phoneNumber;
    }
    set phoneNumber(value) {
        if (!!value) {
            this._intlTelInput.setNumber(value);
        }
        this._phoneNumber = value;
        this.i18nizePhoneNumber();
    }
    i18nizePhoneNumber() {
        this.E164PhoneNumber = null;
        if (this._intlTelInput.isValidNumber()) {
            this.E164PhoneNumber = this._intlTelInput.getNumber();
        }
        this.E164PhoneNumberChange.emit(this.E164PhoneNumber);
    }
}
IntlTelInputComponent.decorators = [
    { type: Component, args: [{
                selector: 'intl-tel-input',
                template: "<label [attr.for]=\"name\" [ngClass]=\"labelCssClass\" *ngIf=\"label && name\" >{{label}}</label>\n<input\n    type=\"text\"\n    [ngClass]=\"cssClass\"\n    [attr.id]=\"name\"\n    [attr.name]=\"name\"\n    [name]=\"name\"\n    [attr.aria-required]=\"required || null\"\n    [required]=\"required\"\n    [(ngModel)]=\"phoneNumber\"\n    (countrychange)=\"i18nizePhoneNumber()\"\n    #intlTelInput>\n\n",
                viewProviders: [{ provide: ControlContainer, useExisting: NgForm }],
                styles: [""]
            },] }
];
IntlTelInputComponent.propDecorators = {
    cssClass: [{ type: Input }],
    E164PhoneNumber: [{ type: Input }],
    label: [{ type: Input }],
    labelCssClass: [{ type: Input }],
    name: [{ type: Input }],
    onlyLocalized: [{ type: Input }],
    options: [{ type: Input }],
    required: [{ type: Input }],
    E164PhoneNumberChange: [{ type: Output }],
    _inputElement: [{ type: ViewChild, args: ['intlTelInput',] }]
};

/*
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
 * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
 * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
 * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
 * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 */
class IntlTelInputNgModule {
    static forRoot() {
        return {
            ngModule: IntlTelInputNgModule,
            providers: []
        };
    }
}
IntlTelInputNgModule.decorators = [
    { type: NgModule, args: [{
                declarations: [
                    IntlTelInputComponent,
                ],
                imports: [
                    CommonModule,
                    FormsModule,
                ],
                exports: [
                    IntlTelInputComponent,
                ]
            },] }
];

/*
 * Public API Surface of intl-tel-input-ng
 */

/**
 * Generated bundle index. Do not edit.
 */

export { IntlTelInputComponent, IntlTelInputNgModule };
//# sourceMappingURL=intl-tel-input-ng.js.map
